###############################################################################
# $Id:$
###############################################################################
## do not change this value 
subdir=doc

## get configured vars

## --*- Makefile -*--
SUBDIRS         := 

## helper utilities ..
INSTALL         = /usr/bin/install -c
MKDIR           = /usr/bin/mkdir.exe
RM              = /usr/bin/rm.exe -r -f
RMF             = /usr/bin/rm.exe -r -f
TAR             = /usr/bin/tar
TOUCH           = /bin/touch
CHMOD           = /usr/bin/chmod.exe
SED             = /usr/bin/sed.exe
GREP            = /usr/bin/grep.exe
CAT             = /usr/bin/cat.exe
CHMOD           = /usr/bin/chmod.exe
CP              = /bin/cp
ECHO            = /bin/echo

# usual dribble
exec_prefix     = ${prefix}
prefix          = /usr/local
program_transform_name = s,x,x,
bindir          = ${exec_prefix}/bin
sbindir         = ${exec_prefix}/sbin
libexecdir      = ${exec_prefix}/libexec
datadir         = ${prefix}/share
sysconfdir      = ${prefix}/etc
sharedstatedir  = ${prefix}/com
localstatedir   = ${prefix}/var
libdir          = ${exec_prefix}/lib
includedir      = ${prefix}/include
oldincludedir   = /usr/include
infodir         = ${prefix}/info
mandir          = ${prefix}/man
build_alias     = 
host_alias      = 
target_alias    = 
build           = i686-pc-mingw32
build_cpu       = i686
build_vendor    = pc
build_os        = mingw32
host            = i686-pc-mingw32
host_cpu        = i686
host_vendor     = pc
host_os         = mingw32
just_make       = /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make

# Version stuff...
VERSION         = 2
SUBVERSION      = 7
PATCHLEVEL      = 7
PACKAGE_NAME    = antlr
PACKAGE_VERSION = 2.7.7
versioneddir    = antlr-2.7.7

# navigation 
builddir        = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7
buildtree       = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7
sourcetree      = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/..

## Two abbrevs to shorten things. $(thisdir) shall be the current
## working  directory  as  absolute  name  and $(_srcdir) is it's 
## source dir companion. That means that  $(thisdir)/Makefile has
## been generated by $(_srcdir)/Makefile.in.
_srcdir         = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../$(subdir)
thisdir         = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/$(subdir)

# variable 'srcdir' is deprecated - use sourcetree
srcdir          = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/..
# variable 'objdir' is deprecated - use buildtree
objdir          = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7

# other
verbose         = 0

## SUBDIRS you want to exclude (separate them by using "|").
SUBDIRS_NOT    := .

CLR            = 

ANTLR_JAR      = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/antlr/antlr.jar
ANTLR_LIB      = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/cpp/src/libantlr.a
ANTLR_NET      = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/antlr.runtime.dll
ANTLR_PY       = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/python/antlr/python.py
ASTFRAME_NET   = /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/antlr.astframe.dll

antlr_jar      = antlr.jar
antlr_lib      = libantlr.a
antlr_net      = antlr.runtime.dll
antlr_py       = python.py
astframe_net   = antlr.astframe.dll

## get configured rules

##xxxxxxxxxxxxxxxxxxxxxx --*- Makefile -*-- xxxxxxxxxxxxxxxx>>> config.make
## By default, make will jump into any sub directory that contains a   file 
## named "Makefile". This is done  in the order implied by "/bin/ls"  which
## is in almost  all  cases  correct  (note  that  you  should  not  design 
## Makefiles which depend on a specific invocation order). You can override
## specific  behaviour  by  using  variable SUBDIRS. If given and not empty,
## "/bin/ls" is not used. Also,  if you want to disable jumping subdirs you
## may  use  either ".", ".."  as  value for SUBDIRS. Note that SUBDIRS may 
## contain any directory (except "." and "..).

## This is very much  GNU specific, sigh.  Variable SUBDIRS is used to tell 
## make which  subdirectory to jump. It's  value is normally preset or just
## empty, in which case /bin/ls is used as discussed above. However, I also
## want that a user can say
##
##  make SUBDIRS="d1 d2 .. dn"
##
## That means, ignore defaults and go ahead and make exactly this director-
## ies mentioned. Of course, this should only have  an  impact  on Makefile
## being used  by  "make"  but not for any makefils in d1 .. dn, right? For
## example, if di  needs  to  make directories a,b and c, then they need to
## be made of course. So all burns down to the question how to prevent a
## variable from being passed to submakes. Below you can see the answer. If
## you believe that there's a simpler answer to the problem don't hesistate
## to try it out. If  it  works, send me an email: ora dot et dot labora at
## web dot de. But be warned - you need to try all variations.
##
## Here is in short what  I  found  and how  it  works.  Variables given on 
## command line  are  saved  in  variable  MAKEOVERRIDES. This  variable is 
## exported  and  passed down. On  invocation  of a submake file, make will
## have a  look  into MAKEOVERRIDES  and unpack each variable found therein.
## Therefore I'm just going to  remove  every (?) occurance of SUBDIRS from
## this variable. 
MAKEOVERRIDES := $(patsubst SUBDIRS=%,,$(MAKEOVERRIDES))


## The actuall rule on how to make a recursive target.
all clean distclean test install force-target clean-target :: 
	@dirs="$(SUBDIRS)" ; \
	test -z "$${dirs}" && { \
		dirs=`/bin/ls` ; \
  } ; \
	for d in . $${dirs} ; do \
		case $${d} in \
		. | .. ) ;; \
	  $(SUBDIRS_NOT) ) ;; \
		*) \
		if test -f "$${d}/Makefile" ; then \
		  echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>" ; \
		  echo ">> /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C $(subdir)/$${d} $@                          " ; \
			echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>" ; \
			/c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C "$$d" $@ || exit 1 ;\
		fi ; \
		;; \
		esac ; \
	done

## For historical  reasons only you can make local targets as "this-*" or 
## "*-this" rules. The  default is to do nothing. Although this targets
## exists, it is recommended to define further "all", "clean" etc. double
## colon rules.
 
all       :: this-all all-this
clean     :: this-clean clean-this
distclean :: this-distclean distclean-this
test      :: this-test test-this
install   :: this-install install-this

this-all ::
this-clean ::
this-distclean ::
this-test ::
this-install ::

all-this ::
clean-this ::
distclean-this ::
test-this ::
install-this ::

force-target :: clean-target all

distclean :: clean

distclean ::
	$(RM) Makefile

## xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<< config.make 

antlr_doc_DIR = $(datadir)/doc/$(versioneddir)

antlr_doc_FILES = \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/closure.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/cpp-runtime.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/csharp-runtime.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/err.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/glossary.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/hidden.stream.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/index.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/inheritance.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/j-guru-blue.jpg \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/jguru-logo.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/lexer.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/lexer.to.parser.tokens.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/logo.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/metalang.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/optional.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/options.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/posclosure.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/python-runtime.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/runtime.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/sor.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/stream.perspectives.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/stream.selector.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/streams.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/stream.splitter.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/subrule.gif \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/trees.html \
  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/doc/../doc/vocab.html \
	$(eol)

install ::
	@$(MKDIR) -p "$(antlr_doc_DIR)"
	@/bin/echo "install doc files .. "
	@for f in $(antlr_doc_FILES) ; do \
		/bin/echo "install $${f}" ; \
		if test -f "$${f}" ; then \
			$(INSTALL) -m 444 "$${f}" "$(antlr_doc_DIR)" ; \
		fi ;\
	done

## get configured dependencies ..

## --*- Makefile -*--
## Make listed targets even in case a file with same name exists.
.PHONY: \
 this \
 all clean install test distclean \
 this-all this-clean this-install this-test this-distclean \
 all-this clean-this install-this test-this distclean-this \
 $(eof)

## delete suffix rules - shortens output when using -d and is not
## used anyway (and should not be used).
.SUFFIXES:

Makefile :: /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../$(subdir)/Makefile.in  \
            /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.deps \
					  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.make \
					  /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.vars \
            /d/MyProject/MGPLib/3rdparty/antlr-2.7.7/config.status
	@echo "*** update $(subdir)/Makefile"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES="$(subdir)/Makefile" /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.deps : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/config.deps.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/config.deps /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.make : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/config.make.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/config.make /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/config.vars : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/config.vars.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/config.vars /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/config.status : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../configure
	@echo "*** reconfigure $@ - stay tuned .."
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && /bin/sh ./config.status -q --recheck
	@echo "*** update all configured files .."
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && /bin/sh ./config.status -q

### In a pure devel mode there should be also a dependency listed on how
### to make configure out of  configure.in.  This  requires that usr has 
### m4  and  autoconf (proper version) installed. Appropriate checks are 
### not done in configure. If so, then uncomment next lines:
###
###   @rule_configure_configure_in@
###

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/antlr.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/antlr.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/antlr.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/cpp.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/cpp.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/cpp.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/csc.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/csc.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/csc.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/cxx.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/cxx.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/cxx.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/jar.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/jar.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/jar.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/javac.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/javac.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/javac.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/java.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/java.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/java.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/lib.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/lib.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/lib.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/link.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/link.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/link.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/pyinst.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/pyinst.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/pyinst.sh /bin/sh ./config.status -q

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/python.sh : \
	/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/scripts/../scripts/python.sh.in
	@echo "*** update $@"
	@cd /d/MyProject/MGPLib/3rdparty/antlr-2.7.7 && CONFIG_FILES=scripts/python.sh /bin/sh ./config.status -q


## This rule shall ensure that ANTLR_NET is up-to-date. The rule is a 
## double colon rule, ie. further  rules  with the same target may be
## added. For unknown reasons, double colon rules are always phony,ie.
## getting executed even in case target exists. We break the infinite
## loop,  we only  jump  into  subdir  "lib/csharp/src" if we are not 
## already in. It is very important that  each Makefile[.in] sets the
## variable $(subdir) proper.

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/antlr.runtime.dll :: 
	@ subdir="lib/csharp/antlr.runtime" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C "$$d" $@ ; \
        } 	\
        ;; \
    esac

/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/antlr.astframe.dll :: 
	@ subdir="lib/csharp/antlr.astframe" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/antlr/antlr.jar ::
	@ subdir="antlr" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/lib/cpp/src/libantlr.a ::
	@ subdir="lib/cpp/src" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/d/MyProject/MGPLib/3rdparty/antlr-2.7.7/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         /c/Qt/Qt5.9.3/Tools/mingw530_32/bin/make -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


